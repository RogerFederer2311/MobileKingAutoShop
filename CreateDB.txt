CREATE DATABASE mobile_king_auto_shop;
USE mobile_king_auto_shop;

CREATE TABLE users (
    email VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
	phone_number VARCHAR(20) NOT NULL,
    gender ENUM('Male', 'Female', 'Other') NOT NULL,
    other_gender VARCHAR(255),
    password VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Technician', 'Customer') NOT NULL,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
	zip_code VARCHAR(20) NOT NULL,
    country VARCHAR(255) NOT NULL,
    PRIMARY KEY (email)
);

CREATE TABLE notifications (
    notification_id INT AUTO_INCREMENT,
    user_email VARCHAR(255) NOT NULL,
    messsage TEXT NOT NULL,
    notification_type ENUM('Service Update', 'Payment Update', 'Admin Message') NOT NULL,
    sent_at DATETIME NOT NULL,
    PRIMARY KEY (notification_id),
    FOREIGN KEY (user_email) REFERENCES users(email)
);

CREATE TABLE technician_specialties (
    specialty_id INT AUTO_INCREMENT,
    technician_email VARCHAR(255) NOT NULL,
    specialty VARCHAR(100) NOT NULL,
    PRIMARY KEY (specialty_id),
    FOREIGN KEY (technician_email) REFERENCES users(email)
);

CREATE TABLE vehicles (
    vehicle_id INT AUTO_INCREMENT,
    customer_email VARCHAR(255) NOT NULL,
    vin VARCHAR(50),
    license_plate VARCHAR(50),
    make VARCHAR(100) NOT NULL,
    model VARCHAR(100) NOT NULL,
    year INT NOT NULL,
    color VARCHAR(50) NOT NULL,
    is_hidden BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (vehicle_id),
    FOREIGN KEY (customer_email) REFERENCES users(email)
);

CREATE TABLE service_requests (
    service_request_id INT AUTO_INCREMENT,
    customer_email VARCHAR(255) NOT NULL,
    vehicle_id INT NOT NULL,
    issue_description TEXT NOT NULL,
    service_date DATETIME NOT NULL,
    status ENUM('Pending', 'In Progress', 'Completed'),
    address VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
	zip_code VARCHAR(20) NOT NULL,
    country VARCHAR(255) NOT NULL,
    PRIMARY KEY (service_request_id),
    FOREIGN KEY (customer_email) REFERENCES users(email),
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id)
);

CREATE TABLE job_assignments (
    job_assignment_id INT AUTO_INCREMENT,
    service_request_id INT NOT NULL,
    technician_email VARCHAR(255) NOT NULL,
    status ENUM('Pending', 'Accepted', 'In Progress', 'Completed', 'Rejected'),
    start_time DATETIME,
    end_time DATETIME,
    PRIMARY KEY (job_assignment_id),
    FOREIGN KEY (service_request_id) REFERENCES service_requests(service_request_id),
    FOREIGN KEY (technician_email) REFERENCES users(email)
);

CREATE TABLE work_done (
    work_done_id INT AUTO_INCREMENT,
    job_assignment_id INT NOT NULL,
    description TEXT,
    PRIMARY KEY (work_done_id),
    FOREIGN KEY (job_assignment_id) REFERENCES job_assignments(job_assignment_id)
);

CREATE TABLE invoices (
    invoice_id INT AUTO_INCREMENT,
    service_request_id INT NOT NULL,
    amount DECIMAL (10, 2) NOT NULL,
    due_date DATETIME NOT NULL,
    PRIMARY KEY (invoice_id),
    FOREIGN KEY (service_request_id) REFERENCES service_requests(service_request_id)
);

CREATE TABLE customer_credit_cards (
    credit_card_id INT AUTO_INCREMENT,
    customer_email VARCHAR(255) NOT NULL,
    card_number VARCHAR(255),
    security_code INT NOT NULL,
    expiration_date DATETIME,
    is_hidden BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (credit_card_id),
    FOREIGN KEY (customer_email) REFERENCES users(email)
);

CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT,
    credit_card_id INT NOT NULL,
    invoice_id INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    payment_date DATETIME NOT NULL,
    PRIMARY KEY (payment_id),
    FOREIGN KEY (credit_card_id) REFERENCES customer_credit_cards(credit_card_id),
    FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id)
);
